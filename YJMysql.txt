
drop database if exists weixiu;

CREATE DATABASE weixiu DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;

/*
账号表（account）：记录登录账号信息
用户表（user）：记录用户基本信息和密码
权限表（permission）：记录权限信息
角色表（role）：记录角色信息，即定义权限组

“MENU”表示菜单的访问权限、
“OPERATION”表示功能模块的操作权限、
“FILE”表示文件的修改权限、
“ELEMENT”表示页面元素的可见性控制等。

*/

use weixiu;

--  1.0用户表
drop table if exists user;
CREATE TABLE `user`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `state` tinyint(1) NULL DEFAULT NULL COMMENT '用户状态:0=正常,1=禁用',
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '姓名',
  `mobile` varchar(11) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '手机号码',
  `password` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '登录密码',
  `address` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '地址',
  PRIMARY KEY (`id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '用户' ROW_FORMAT = Dynamic;

insert into user values(null,0,"admin","123456","admin","china");
-- ===================================================================================


--  1.2 权限表
drop table if exists permission;
CREATE TABLE `permission`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '权限ID',
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '权限名称',
  `type` tinyint(1) NULL DEFAULT NULL COMMENT '类型:0=菜单,1=目录,2=按钮',
  `uri` varchar(100) NULL DEFAULT NULL COMMENT '权限路径',
  `code` varchar(100) NULL DEFAULT NULL COMMENT '权限标识码',
  PRIMARY KEY (`id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '权限' ROW_FORMAT = Dynamic;

insert into permission values(null,"用户管理",0,"url/user-list","MNUM_user_list");
insert into permission values(null,"角色管理",0,"url/role-list","MNUM_role_list");
insert into permission values(null,"权限管理",0,"url/permission-list","MNUM_permission_list");
insert into permission values(null,"授权管理",0,"url/product-list","MNUM_product_list");
insert into permission values(null,"订单管理",0,"url/order-list","MNUM_order_list");

insert into permission values(null,"订单新增",2,"url/order-add","ELEMENT_order:add");
insert into permission values(null,"订单删除",2,"/order/deleteOrders","ELEMENT_order:delete");
insert into permission values(null,"订单修改",2,"/order/selectOrderUserByID","ELEMENT_order:update");
insert into permission values(null,"订单分配",2,"url/order-page-list","ELEMENT_order:page-list");
-- ===========================================================================

-- 1.3 角色表
drop table if exists role;
CREATE TABLE `role`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '角色ID',
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '角色名称',
  `intro` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '角色介绍',
  PRIMARY KEY (`id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '角色' ROW_FORMAT = Dynamic;

insert into role values(null,"系统管理员","拥有所有权限");
insert into role values(null,"维修人员","拥有查看和修改表单权限");
insert into role values(null,"普通用户","拥有新建表单的权限");
-- ===========================================================================

-- 1.4 订单表
drop table if exists `order`;
CREATE TABLE `order`(
	`id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '工单ID',
	`orderCode` varchar(255) NOT NULL  COMMENT '订单编号',
	`name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '姓名',
	`orderTime` datetime DEFAULT NULL COMMENT '下单时间',
	`phone` bigint(20) NOT NULL COMMENT '电话',
	`address` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '地址',
	`orderStatue` tinyint(1)  DEFAULT 0 COMMENT '逻辑:0=未接,1=已接,2=已完成',
	primary key (`id`) using btree
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '订单表' ROW_FORMAT = Dynamic;

--  1.2.1 角色——权限表
drop table if exists role_permission;
CREATE TABLE `role_permission`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `roleID` bigint(20) NOT NULL  COMMENT '角色ID',
  `permissionID` bigint(20) NULL DEFAULT NULL COMMENT '权限ID',
  PRIMARY KEY (`id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '角色——权限表' ROW_FORMAT = Dynamic;

-- 添加角色权限
insert into role_permission values(null,1,1);
insert into role_permission values(null,1,2);
insert into role_permission values(null,1,3);
insert into role_permission values(null,1,4);
insert into role_permission values(null,1,5);
insert into role_permission values(null,1,6);
insert into role_permission values(null,1,7);
insert into role_permission values(null,1,8);
insert into role_permission values(null,1,9);


insert into role_permission values(null,2,5);
insert into role_permission values(null,2,8);

insert into role_permission values(null,3,5);
insert into role_permission values(null,3,6);
insert into role_permission values(null,3,7);
-- 查询角色权限
-- select a.roleID,b.name,b.type,b.uri,b.code from role_permission a,permission b where a.permissionID=b.id

-- select a.id,c.name,b.name,b.type,b.uri,b.code from role_permission a,permission b,role c where a.permissionID=b.id and a.roleID=c.id




-- ================================================================
--  1.3.1 用户--角色表
drop table if exists user_role;
CREATE TABLE `user_role`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `userID` bigint(20) NOT NULL  COMMENT '用户ID',
  `roleID` bigint(20) NULL DEFAULT NULL COMMENT '角色ID',
  PRIMARY KEY (`id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '用户--角色表' ROW_FORMAT = Dynamic;


insert into user_role values(null,1,1);


-- ==========================================

--  1.3.1 用户--订单表
drop table if exists user_order;
CREATE TABLE `user_order`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `userID` bigint(20) NOT NULL  COMMENT '用户ID',
  `orderID` bigint(20) NULL DEFAULT NULL COMMENT '订单ID',
  PRIMARY KEY (`id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '用户--订单表' ROW_FORMAT = Dynamic;

-- ============================================

--  1.系统公告表
drop table if exists notice;
CREATE TABLE `notice`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '公告ID',
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '标题',
  `name` varchar(11) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '作者名字',
  `noticeTime` datetime DEFAULT NULL COMMENT '创作时间',
  `context` Text  COMMENT '内容',
  PRIMARY KEY (`id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '系统公告' ROW_FORMAT = Dynamic;

select * from notice;

insert into notice values(null,"冬天里的一把火","螺蛳粉","2020-02-05","9张掖市山丹县城南6公里发现距今约4000多年的四坝滩遗址，属新石器时代末期的马家窑文");

-- =========================================================================
-- 1.4 预警表
drop table if exists `yw_xljk`;
CREATE TABLE `yw_xljk`(
	`corrp_id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
	`qth` varchar(255) NOT NULL  COMMENT '躯体化',
	`qpzz` varchar(255) NOT NULL  COMMENT'强迫症状',
	`rjgxmg` varchar(255) NOT NULL  COMMENT '人际关系敏感',
	`yy` varchar(255) NOT NULL  COMMENT '抑郁',
	`jl` varchar(255) NOT NULL  COMMENT '焦虑',
	`dd` varchar(255) NOT NULL  COMMENT '敌对',
	`kb` varchar(255) NOT NULL  COMMENT '恐怖',
	`pz` varchar(255) NOT NULL  COMMENT '偏执',
	`jsbx` varchar(255) NOT NULL  COMMENT '精神病性',
	`qt` varchar(255) NOT NULL  COMMENT '其他',
	`zf` varchar(255) NOT NULL  COMMENT '总分',
	`pjf` varchar(255) NOT NULL  COMMENT '平均分',
	`yinxxms` varchar(255) NOT NULL  COMMENT '阴性项目数',
	`yangxxms` varchar(255) NOT NULL  COMMENT '阳性项目数',
	`yjyz` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci  NULL  COMMENT '预警因子',
	`yjfz` varchar(255)   NULL  COMMENT '预警分值',
	`yjsm`varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci   NULL COMMENT '预警说明',
	`jg` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci  NOT NULL COMMENT '警告',
	PRIMARY Key(`corrp_id`) USING BTREE
) CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '预警表' ROW_FORMAT = Dynamic;

-- 日志表
drop table if exists SysLog;
create table SysLog(
	id int(11) not null primary key auto_increment comment '主键',
	username varchar(60) not null comment '用户的名称',
	url varchar(120) comment '访问的网址',
	ip varchar(20) comment '用户的ip地址',
	method varchar(120) comment '方法的全限定方法名',
	visitTime varchar(60) comment '访问的时间',
	times varchar(50) comment '访问响应时长'
);
